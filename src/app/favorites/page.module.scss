// src/app/favorites/page.module.scss
@import "../../styles/variables.scss";

// Mobile search section - only show on mobile (matches d-md-none)
.mobileSearchSection {
  padding: $spacing-md 0 0;

  @media screen and (min-width: $breakpoint-md) {
    display: none;
  }

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    padding: $spacing-sm 0;
    background-color: $background-light;
  }
}

// Mobile search wrapper styling
.mobileSearchWrapper {
  // Just style the wrapper - let HomeSearch handle its own styling
  width: 100%;
  padding: 0;
  margin: 0;

  // Note: HomeSearch component with variant="small" should handle mobile styling internally
  // This wrapper just ensures proper container styling for favorites page
}

// Main section styling
.mainSection {
  padding: $spacing-2xl 0;
  min-height: 60vh;

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    padding: $spacing-xl 0;
  }
}

// Page header
.pageHeader {
  margin-bottom: $spacing-3xl;

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    margin-bottom: $spacing-2xl;
  }
}

// Page title styling
.pageTitle {
  margin: 0;
  font-family: $font-family-bold;
  font-size: $font-size-2xl;
  font-weight: 700;
  color: $primary-color;
  line-height: 1.2;
  display: flex;
  align-items: center;
  gap: $spacing-sm;

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    font-size: $font-size-xl;
    flex-direction: column;
    align-items: flex-start;
    gap: $spacing-xs;
  }
}

// Favorites count badge
.favoritesCount {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-xs $spacing-sm;
  background-color: $secondary-color;
  color: $white;
  font-family: $font-family-main;
  font-size: $font-size-small;
  font-weight: 600;
  border-radius: $border-radius-full;
  min-width: 32px;
  height: 24px;

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    font-size: $font-size-extra-small;
    padding: $spacing-xs;
    min-width: 28px;
    height: 20px;
  }
}

// Grid wrapper
.gridWrapper {
  width: 100%;
}

// Favorites grid specific styling
.favoritesGrid {
  // PostGrid component already handles its own styling
  // This class is for favorites-specific overrides only

  // Ensure proper spacing for empty states
  &:empty {
    min-height: 300px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

// Loading container
.loadingContainer {
  padding: $spacing-3xl 0;
  min-height: 50vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.loaderWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: $spacing-xl;
  text-align: center;
}

.loadingText {
  margin: 0;
  font-family: $font-family-main;
  font-size: $font-size-base;
  color: $text-light;

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    font-size: $font-size-small;
  }
}

// Error container and styling
.errorContainer {
  padding: $spacing-3xl 0;
  min-height: 50vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.errorWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: $spacing-xl;
  text-align: center;
  max-width: 400px;
  padding: $spacing-3xl;
  background-color: $white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-md;

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    max-width: 90%;
    padding: $spacing-2xl;
  }
}

.errorTitle {
  margin: 0;
  font-family: $font-family-bold;
  font-size: $font-size-xl;
  color: $danger-color;
  line-height: 1.2;
}

.errorMessage {
  margin: 0;
  font-family: $font-family-main;
  font-size: $font-size-base;
  color: $text-color;
  line-height: 1.5;

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    font-size: $font-size-small;
  }
}

.retryButton {
  padding: $spacing-sm $spacing-2xl;
  background-color: $primary-color;
  color: $white;
  border: none;
  border-radius: $border-radius;
  font-family: $font-family-main;
  font-size: $font-size-base;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;

  &:hover {
    background-color: darken($primary-color, 10%);
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }

  &:active {
    transform: translateY(0);
    box-shadow: $shadow-sm;
  }

  &:focus {
    outline: 2px solid $secondary-color;
    outline-offset: 2px;
  }

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    padding: $spacing-sm $spacing-xl;
    font-size: $font-size-small;
  }
}

// Accessibility improvements
@media (prefers-reduced-motion: reduce) {
  .retryButton,
  .mobileSearchWrapper :global(.search__btn),
  .favoritesCount {
    transition: none !important;
    transform: none !important;
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .pageTitle {
    color: $black;
  }

  .errorTitle {
    color: $black;
  }

  .retryButton {
    border: 2px solid $black;
  }
}
