@import "../../styles/variables.scss";

// Main category container
.category {
  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    margin-top: -16px;
  }
}

// Show all state for mobile grid layout
.show-all {
  // Applied to category__inner when showing all categories on mobile
  // The actual styling is handled by the &.show-all selector above
}

.category__list {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
}

.category__inner {
  display: grid;
  grid-template-columns: repeat(4, minmax(0, 1fr));
  margin-bottom: 24px;
  padding: 10px 10px 15px;
  // Removed white background and box shadow per user request

  // Tablet view - 3 columns (from original code)
  @media screen and (max-width: calc(#{$breakpoint-lg} - 1px)) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  // Mobile view - 2 column grid layout (not horizontal scroll)
  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 8px;
    padding: 16px 8px;
    margin-bottom: 16px;
  }
}

.category__item {
  display: flex;
  align-items: center;
  padding: 14px 5px;

  // Desktop: 6 columns (16.666667% each)
  flex: 0 0 16.666667%;
  max-width: 16.666667%;

  // Tablet: 4 columns (25% each) - between 768px-991px
  @media screen and (max-width: calc(#{$breakpoint-lg} - 1px)) and (min-width: #{$breakpoint-md}) {
    flex: 0 0 25%;
    max-width: 25%;
  }

  // Mobile: 2 items visible (50% each) in horizontal scroll, or full width in grid when showing all
  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    flex: 0 0 50%;
    max-width: 50%;
    padding: 14px 0;

    // When showing all categories, items should work in grid layout
    &.show-all {
      flex: none;
      max-width: none;
      width: 100%;
      padding: 8px;
    }
  }

  img {
    margin-right: 10px;
  }
}

// Sub-category items (for special cases)
.category__item--sub {
  padding: 10px;
  transition: 0.3s;

  &:not(:last-of-type) {
    margin-right: 10px;
  }

  @media screen and (min-width: #{$breakpoint-md}) {
    &.active {
      font-family: $font-family-bold;
    }
  }

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    border: 1px solid $text-light;
    border-radius: 6px;
    white-space: nowrap;

    &.active {
      background-color: $primary-color;
      border-color: $primary-color;
      color: $white;
    }
  }
}

// Full width item
.category__item--full {
  grid-column: 1/-1;
}

// Category button (show more) - only visible on mobile when needed
.category__btn {
  width: 100%;
  margin-top: 8px;
  padding: 8px 16px;
  background: rgba($primary-color, 0.1);
  border-radius: 5px;
  color: $primary-color;
  border: none;
  font-size: $font-size-base;
  font-family: $font-family-main;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;

  &:before {
    content: "";
    width: 24px;
    height: 24px;
    margin-right: 8px;
    background: url("../../../public/assets/images/categories/categories-more.svg")
      no-repeat center/cover;
    display: block;
  }

  &:hover,
  &:focus {
    background: rgba($primary-color, 0.15);
    color: $primary-color;
    transform: translateY(-1px);
  }

  &:focus {
    outline: 2px solid $secondary-color;
    outline-offset: 2px;
  }

  &:active {
    transform: translateY(0);
  }

  // Hidden on desktop - button logic is handled by React component
  @media screen and (min-width: #{$breakpoint-md}) {
    display: none;
  }
}

// Utility class for hiding elements (matching original d-none behavior)
.d-none {
  display: none !important;
}

// Loading state
.category__loading {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  color: $text-light;
  font-size: $font-size-base;
}

// Error state
.category__error {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  color: #dc3545;
  font-size: $font-size-base;
  text-align: center;
}

// Empty state
.category__empty {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  color: $text-light;
  font-size: $font-size-base;
  text-align: center;
}
