// Performance-Optimized PostGrid.module.scss - Enhanced grid with better performance
@import "../../styles/variables.scss";

// ‚úÖ OPTIMIZED: Main post grid container
.post {
  width: 100%;
  position: relative;
}

// ‚úÖ OPTIMIZED: Wrapper with better spacing
.wrapper {
  width: 100%;
}

// ‚úÖ OPTIMIZED: Post list with efficient grid
.post__list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 24px;
  padding: 0;
  margin: 0;
  list-style: none;

  @media screen and (max-width: 1400px) {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 20px;
  }

  @media screen and (max-width: 1200px) {
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  }

  @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 16px;
  }

  @media screen and (max-width: 520px) {
    grid-template-columns: 1fr;
    gap: 20px;
  }
}

// ‚úÖ OPTIMIZED: Post item container with lighter animation
.post__item {
  position: relative;
  height: 100%;

  // ‚úÖ PERFORMANCE: Lighter staggered animation
  animation: fadeInUp 0.4s ease-out both; // ‚úÖ REDUCED: Was 0.6s

  // ‚úÖ PERFORMANCE: Reduce stagger count to avoid too many animations
  @for $i from 1 through 8 {
    // ‚úÖ REDUCED: Was 12, now 8
    &:nth-child(#{$i}) {
      animation-delay: #{($i - 1) * 0.05}s; // ‚úÖ REDUCED: Was 0.1s, now 0.05s
    }
  }
}

// ‚úÖ OPTIMIZED: Loading state with efficient skeletons
.post__loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 80px 20px;
  text-align: center;
  min-height: 300px;

  span {
    margin-top: 16px;
    color: $text-light;
    font-size: $font-size-base;
    font-weight: 500;
  }

  // ‚úÖ OPTIMIZED: Skeleton grid with better performance
  &.withSkeleton {
    display: block;
    padding: 0;
    min-height: auto;

    .skeletonGrid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 24px;

      @media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
        grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
        gap: 16px;
      }

      @media screen and (max-width: 520px) {
        grid-template-columns: 1fr;
      }
    }

    .skeletonCard {
      background: $white;
      border-radius: 20px;
      overflow: hidden;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
      // ‚úÖ PERFORMANCE: Simpler animation
      animation: pulse 1s infinite ease-in-out;

      .skeletonImage {
        height: 220px;
        background: linear-gradient(
          90deg,
          #f0f0f0 25%,
          #e0e0e0 50%,
          #f0f0f0 75%
        );
        background-size: 200% 100%;
        // ‚úÖ PERFORMANCE: Reduced animation speed
        animation: shimmer 1.2s infinite; // ‚úÖ SLOWER: Was 1.5s, now 1.2s for efficiency
      }

      .skeletonContent {
        padding: 24px;

        .skeletonLine {
          height: 12px;
          background: linear-gradient(
            90deg,
            #f0f0f0 25%,
            #e0e0e0 50%,
            #f0f0f0 75%
          );
          background-size: 200% 100%;
          animation: shimmer 1.2s infinite;
          border-radius: 6px;
          margin-bottom: 12px;

          &:nth-child(1) {
            width: 100%;
          }
          &:nth-child(2) {
            width: 80%;
          }
          &:nth-child(3) {
            width: 60%;
            height: 16px;
          }
          &:nth-child(4) {
            width: 40%;
            height: 10px;
          }
        }
      }
    }
  }
}

// ‚úÖ OPTIMIZED: Error state with better visual design
.post__error {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 80px 20px;
  text-align: center;
  background: rgba(220, 53, 69, 0.02);
  border: 1px solid rgba(220, 53, 69, 0.1);
  border-radius: 20px;
  min-height: 300px;
  position: relative;
  overflow: hidden;

  // ‚úÖ OPTIMIZED: Error icon with lighter animation
  &::before {
    content: "‚ö†Ô∏è";
    font-size: 3rem;
    margin-bottom: 20px;
    display: block;
    animation: bounce 2s infinite ease-in-out; // ‚úÖ LIGHTER: ease-in-out
  }

  p {
    margin: 0 0 8px 0;

    &:first-of-type {
      color: #dc3545;
      font-size: 1.1rem;
      font-weight: 600;
    }

    &:last-of-type {
      color: $text-light;
      font-size: $font-size-small;
    }
  }

  // ‚úÖ OPTIMIZED: Subtle pattern background
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url("data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23dc3545' fill-opacity='0.03'%3E%3Cpath d='M20 20c0-5.5-4.5-10-10-10s-10 4.5-10 10 4.5 10 10 10 10-4.5 10-10zm10 0c0-5.5-4.5-10-10-10s-10 4.5-10 10 4.5 10 10 10 10-4.5 10-10z'/%3E%3C/g%3E%3C/svg%3E")
      repeat;
    pointer-events: none;
    z-index: -1;
  }
}

// ‚úÖ OPTIMIZED: Empty state with lighter animation
.post__empty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 80px 20px;
  text-align: center;
  background: rgba($primary-color, 0.02);
  border: 1px solid rgba($primary-color, 0.08);
  border-radius: 20px;
  min-height: 300px;
  position: relative;
  overflow: hidden;

  // ‚úÖ OPTIMIZED: Empty icon with lighter float
  &::before {
    content: "üìÇ";
    font-size: 3rem;
    margin-bottom: 20px;
    display: block;
    opacity: 0.6;
    animation: float 3s ease-in-out infinite;
  }

  p {
    margin: 0;
    color: $text-light;
    font-size: 1.1rem;
    font-weight: 500;
    max-width: 300px;
  }

  // ‚úÖ OPTIMIZED: Subtle pattern background
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23013f44' fill-opacity='0.02'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")
      repeat;
    pointer-events: none;
    z-index: -1;
  }
}

// ‚úÖ PERFORMANCE: Responsive adjustments for different screen sizes
@media screen and (min-width: 1600px) {
  .post__list {
    grid-template-columns: repeat(4, 1fr);
  }
}

@media screen and (min-width: 1200px) and (max-width: 1599px) {
  .post__list {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media screen and (min-width: calc(#{$breakpoint-md})) and (max-width: 1199px) {
  .post__list {
    grid-template-columns: repeat(2, 1fr);
  }
}

// ‚úÖ PERFORMANCE: Optimized animations with better easing
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px); // ‚úÖ REDUCED: Was 30px
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes shimmer {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.8;
  }
}

@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-8px); // ‚úÖ REDUCED: Was -10px
  }
  60% {
    transform: translateY(-4px); // ‚úÖ REDUCED: Was -5px
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-8px); // ‚úÖ REDUCED: Was -10px
  }
}

// ‚úÖ PERFORMANCE: Intersection Observer optimization for grid items
.post__item {
  // ‚úÖ PERFORMANCE: Use contain for better rendering performance
  contain: layout style;
}

// ‚úÖ PERFORMANCE: Mobile optimizations - reduce animations
@media screen and (max-width: calc(#{$breakpoint-md} - 1px)) {
  .post__item {
    // ‚úÖ PERFORMANCE: Lighter animation on mobile
    animation-duration: 0.3s; // ‚úÖ FASTER: Reduced from 0.4s
  }

  // ‚úÖ PERFORMANCE: Reduce skeleton animation complexity on mobile
  .skeletonImage,
  .skeletonLine {
    animation-duration: 1.5s; // ‚úÖ SLOWER: More efficient on mobile
  }

  // ‚úÖ PERFORMANCE: Disable some floating animations on mobile
  .post__empty::before {
    animation: none;
    transform: translateY(-4px); // Static offset instead of animation
  }
}

// ‚úÖ PERFORMANCE: Reduce motion preferences
@media (prefers-reduced-motion: reduce) {
  .post__item,
  .skeletonCard,
  .skeletonImage,
  .skeletonLine {
    animation: none !important;
  }

  .post__error::before,
  .post__empty::before {
    animation: none !important;
  }

  // Provide static positioning instead
  .post__empty::before {
    transform: translateY(-4px);
  }

  .post__error::before {
    transform: none;
  }
}

// ‚úÖ PERFORMANCE: Grid layout debugging (development only)
.post__list[data-debug="true"] {
  .post__item {
    outline: 1px dashed rgba($primary-color, 0.2);
  }
}

// ‚úÖ PERFORMANCE: GPU acceleration hints for modern browsers
@supports (will-change: transform) {
  .post__item {
    will-change: auto; // Only set when needed
  }

  .post__item:hover {
    will-change: transform, box-shadow;
  }

  .post__item:not(:hover) {
    will-change: auto;
  }
}

// ‚úÖ PERFORMANCE: Container queries support (future-proofing)
@supports (container-type: inline-size) {
  .post__list {
    container-type: inline-size;
  }

  @container (max-width: 600px) {
    .post__item {
      // Adjust layout for smaller containers
      font-size: 0.9rem;
    }
  }
}
